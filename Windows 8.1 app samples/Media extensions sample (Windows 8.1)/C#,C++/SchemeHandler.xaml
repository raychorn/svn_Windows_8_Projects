<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
//
//*********************************************************
-->
<common:LayoutAwarePage
    x:Class="MediaExtensions.SchemeHandler"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MediaExtensions"
    xmlns:common="using:SDKTemplate.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TextBlock x:Name="InputTextBlock1" Grid.Row="0" TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left">
                A Scheme handler allows an application to source a media stream to the playback engine. In this example, the video frames are created by 
                the scheme handler on the fly. It can produce flying balls, squares, or rectangles each determined by the scheme type passed down 
                from the application. Scheme handlers are usefull for situations where the source of the media is not a file.
            </TextBlock>

            <StackPanel Orientation="Horizontal" Margin="0,10,0,0" Grid.Row="1" >
                <Button x:Name="Circle" Content="Circle" Margin="0,0,10,0" Click="Circle_Click"/>
                <Button x:Name="Square" Content="Square" Margin="0,0,10,0" Click="Square_Click"/>
                <Button x:Name="Triangle" Content="Triangle" Margin="0,0,10,0" Click="Triangle_Click"/>
            </StackPanel>
            
            <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts for the input section -->
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup>
                    <VisualState x:Name="InputFullScreenLandscape"/>
                    <VisualState x:Name="InputFilled"/>
                    <VisualState x:Name="InputFullScreenPortrait"/>
                    <VisualState x:Name="InputSnapped"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>

        <Grid x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">
            <StackPanel Orientation="Vertical">
                <TextBlock x:Name="OutputTextBlock1" Width="1000"  TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}">
                    Video will be playing that was constructed by the Media Scheme handler that was installed by this feature. 
                    Clicking on the different buttons will change the image that is being drawn.
                </TextBlock>

                <MediaElement x:Name="Video" Width="320" Height="240" HorizontalAlignment="Left" />
            </StackPanel>
            
            <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts for the output section -->
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup>
                    <VisualState x:Name="OutputFullScreenLandscape"/>
                    <VisualState x:Name="OutputFilled"/>
                    <VisualState x:Name="OutputFullScreenPortrait"/>
                    <VisualState x:Name="OutputSnapped"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </Grid>
</common:LayoutAwarePage>
