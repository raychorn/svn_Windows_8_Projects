<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<common:LayoutAwarePage
    x:Class="Microsoft.Samples.Networking.HttpClientSample.Scenario1"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Microsoft.Samples.Networking.HttpClientSample"
    xmlns:common="using:SDKTemplate.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
        <Style x:Key="LeftFriendly" TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontSize" Value="14.66" />
            <Setter Property="Margin" Value="0,0,10,0" />
        </Style>
        <Style x:Key="HorizontalFriendly" TargetType="FrameworkElement">
            <Setter Property="Margin" Value="0,5,0,5" />
        </Style>
        <Style x:Key="RadioFriendly" TargetType="TextBlock">
            <Setter Property="FontSize" Value="14.66" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
    </Page.Resources>

    <Grid x:Name="LayoutRoot" Background="White" HorizontalAlignment="Left" VerticalAlignment="Top">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Row="0" Grid.ColumnSpan="2" x:Name="InputTextBlock1" TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" >
                Download the contents of a page and display it. One way to test Cancel functionality is to change the
                hostname in the Address from localhost to a name that does not exist. To test cache control, change
                the cache read behavior or the cache write behavior.
            </TextBlock>
            <TextBlock Grid.Row="1" Grid.Column="0" Text="Address" Style="{StaticResource LeftFriendly}" />
            <TextBox Grid.Row="1" Grid.Column="1" x:Name="AddressField" Text="http://localhost/HttpClientSample/default.aspx?cacheable=1" Style="{StaticResource HorizontalFriendly}"/>
            <Grid Grid.Row="2" Grid.ColumnSpan="2" Margin="15">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Row="0" Grid.Column="0" Text="Read Behavior" VerticalAlignment="Center" Style="{StaticResource LeftFriendly}" />
                <TextBlock Grid.Row="0" Grid.Column="1" Text="Write Behavior" VerticalAlignment="Center" Style="{StaticResource LeftFriendly}" />
                <StackPanel  Grid.Row="1" Grid.Column="0" Margin="10">
                    <RadioButton GroupName="ReadGroup" x:Name="ReadDefaultRadio" IsChecked="True">
                        <TextBlock Style="{StaticResource RadioFriendly}">
                            Default (if it is already in the cache, does not hit the network)
                        </TextBlock>
                    </RadioButton>
                    <RadioButton GroupName="ReadGroup" x:Name="ReadMostRecentRadio">
                        <TextBlock Style="{StaticResource RadioFriendly}">
                            Most Recent (always hits the network, but if it is already in the cache, If-Modified-Since
                            header is added automatically and if server does not have a newer version, the server will
                            reply with 304 and network bandwidth will be saved)
                        </TextBlock>
                    </RadioButton>
                    <RadioButton GroupName="ReadGroup" x:Name="ReadOnlyFromCacheRadio">
                        <TextBlock Style="{StaticResource RadioFriendly}">
                            Only From Cache (never hits the network)
                        </TextBlock>
                    </RadioButton>
                </StackPanel>
                <StackPanel  Grid.Row="1" Grid.Column="1" Margin="10">
                    <RadioButton GroupName="WriteGroup" x:Name="WriteDefaultRadio" IsChecked="True">
                        <TextBlock Style="{StaticResource RadioFriendly}">
                            Default (if cacheable, stored in the cache)
                        </TextBlock>
                    </RadioButton>
                    <RadioButton GroupName="WriteGroup" x:Name="WriteNoCacheRadio">
                        <TextBlock Style="{StaticResource RadioFriendly}">
                            No Cache (never stored in the cache)
                        </TextBlock>
                    </RadioButton>
                </StackPanel>
            </Grid>
            <StackPanel Grid.Row="3" Grid.Column="1" Orientation="Horizontal">
                <Button Content="Start" x:Name="StartButton" Margin="0,0,10,0" Click="Start_Click" />
                <Button Content="Cancel" x:Name="CancelButton" IsEnabled="False" Click="Cancel_Click" />
            </StackPanel>

            <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts for the input section -->
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup>
                    <VisualState x:Name="InputFullScreenLandscape"/>
                    <VisualState x:Name="InputFilled"/>
                    <VisualState x:Name="InputFullScreenPortrait"/>
                    <VisualState x:Name="InputSnapped"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>

        <Grid x:Name="Output" Grid.Row="1">
            <TextBox x:Name="OutputField" Margin="0" AcceptsReturn="True" TextWrapping="Wrap" HorizontalAlignment="Stretch" />

            <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts for the output section -->
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup>
                    <VisualState x:Name="OutputFullScreenLandscape"/>
                    <VisualState x:Name="OutputFilled"/>
                    <VisualState x:Name="OutputFullScreenPortrait"/>
                    <VisualState x:Name="OutputSnapped"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        
        <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="DefaultLayout"/>
                <VisualState x:Name="Below768Layout"/>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
